{"version":3,"sources":["src/paddle.js","src/input.js","src/collisionDetection.js","src/ball.js","src/heart.js","src/brick.js","src/levels.js","src/game.js","src/index.js"],"names":["Paddle","game","size","w","h","width","height","gameHeight","gameWidth","position","x","y","speed","maxSpeed","inLoop","ctx","fillStyle","fillRect","deltaTime","InputHandler","paddle","document","addEventListener","event","key","start","moveLeft","moveRight","togglePause","increment","decrement","ctrlKey","altKey","restart","stop","incrementBtn","getElementById","decrementBtn","ball","detectCollision","gameObject","ballTop","ballBottom","ballLeft","ballRight","gameObjectTop","gameObjectBottom","gameObjectLeft","gameObjectRight","Ball","image","initialSpeed","reset","drawImage","lives","Heart","initial","i","level","Number","font","textAlign","fillText","Brick","markedForDeletion","buildLevel","pracBrick","bricks","forEach","row","rowIndex","brick","brickIndex","push","level1","level2","level3","levels","GAME_STATE","PAUSED","RUNNING","MENU","GAME_OVER","NEW_LEVEL","VICTORY","Game","gameState","gameObjects","heart","length","elem","update","isInLoop","filter","draw","rect","fill","canvas","getContext","GAME_WIDTH","clientWidth","GAME_HEIGHT","clientHeight","lastTime","gameLoop","timeStamp","clearRect","requestAnimationFrame"],"mappings":"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","file":"src.bb8ffc80.js","sourceRoot":"..","sourcesContent":["export default class Paddle {\r\n  constructor(game) {\r\n    this.size = { w: 150, h: 30 };\r\n    this.width = this.size.w;\r\n    this.height = this.size.h;\r\n    this.gameHeight = game.gameHeight;\r\n    this.gameWidth = game.gameWidth;\r\n\r\n    this.position = {\r\n      x: this.gameWidth / 2 - this.width / 2,\r\n      y: this.gameHeight - this.height - 10\r\n    };\r\n\r\n    this.speed = 0;\r\n    this.maxSpeed = 5;\r\n\r\n    this.inLoop = true;\r\n  }\r\n\r\n  stop() {\r\n    this.inLoop = false;\r\n  }\r\n\r\n  start() {\r\n    this.inLoop = true;\r\n  }\r\n\r\n  moveRight() {\r\n    this.speed = this.maxSpeed;\r\n  }\r\n\r\n  moveLeft() {\r\n    this.speed = -this.maxSpeed;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = \"#fff\";\r\n    ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n\r\n  update(deltaTime) {\r\n    if (!deltaTime) return;\r\n\r\n    if (this.inLoop) {\r\n      this.position.x += this.speed * (deltaTime / 10);\r\n      if (this.position.x < 10) this.position.x = 10;\r\n      if (this.position.x > this.gameWidth - this.width - 10)\r\n        this.position.x = this.gameWidth - this.width - 10;\r\n    }\r\n  }\r\n}\r\n","export default class InputHandler {\r\n  constructor(paddle, game) {\r\n    this.game = game;\r\n    this.paddle = paddle;\r\n    document.addEventListener(\"keydown\", (event) => {\r\n      switch (event.key) {\r\n        case \"ArrowLeft\":\r\n          paddle.start();\r\n          paddle.moveLeft();\r\n          break;\r\n\r\n        case \"a\":\r\n          paddle.start();\r\n          paddle.moveLeft();\r\n          break;\r\n\r\n        case \"ArrowRight\":\r\n          paddle.start();\r\n          paddle.moveRight();\r\n          break;\r\n\r\n        case \"d\":\r\n          paddle.start();\r\n          paddle.moveRight();\r\n          break;\r\n\r\n        case \"Escape\":\r\n          game.togglePause();\r\n          break;\r\n\r\n        case \" \":\r\n          game.start();\r\n          break;\r\n\r\n        case \"ArrowUp\":\r\n          this.increment();\r\n          break;\r\n\r\n        case \"ArrowDown\":\r\n          this.decrement();\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      if (event.ctrlKey && event.altKey && event.key === \"r\") {\r\n        game.restart();\r\n      }\r\n    });\r\n\r\n    document.addEventListener(\"keyup\", (event) => {\r\n      switch (event.key) {\r\n        case \"ArrowLeft\":\r\n          paddle.stop();\r\n          break;\r\n\r\n        case \"a\":\r\n          paddle.stop();\r\n          break;\r\n\r\n        case \"ArrowRight\":\r\n          paddle.stop();\r\n          break;\r\n\r\n        case \"d\":\r\n          paddle.stop();\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    this.incrementBtn = document.getElementById(\"increment\");\r\n    this.decrementBtn = document.getElementById(\"decrement\");\r\n\r\n    this.incrementBtn.addEventListener(\"click\", () => {\r\n      this.increment();\r\n    });\r\n\r\n    this.decrementBtn.addEventListener(\"click\", () => {\r\n      this.decrement();\r\n    });\r\n  }\r\n\r\n  increment() {\r\n    if (this.game.ball.speed.x - 1 !== 0) {\r\n      if (this.game.ball.speed.x > 0) {\r\n        this.game.ball.speed.x += 1;\r\n      } else {\r\n        this.game.ball.speed.x -= 1;\r\n      }\r\n      if (this.game.ball.speed.y > 0) {\r\n        this.game.ball.speed.y += 1;\r\n      } else {\r\n        this.game.ball.speed.y -= 1;\r\n      }\r\n      this.paddle.maxSpeed += 1;\r\n    }\r\n  }\r\n\r\n  decrement() {\r\n    if (this.game.ball.speed.x - 1 > 1) {\r\n      if (this.game.ball.speed.x > 0) {\r\n        this.game.ball.speed.x -= 1;\r\n      } else {\r\n        this.game.ball.speed.x += 1;\r\n      }\r\n      if (this.game.ball.speed.y > 0) {\r\n        this.game.ball.speed.y -= 1;\r\n      } else {\r\n        this.game.ball.speed.y += 1;\r\n      }\r\n      this.paddle.maxSpeed -= 1;\r\n    }\r\n  }\r\n}\r\n","export default function detectCollision(ball, gameObject) {\r\n  let ballTop = ball.position.y;\r\n  let ballBottom = ball.position.y + ball.size;\r\n  let ballLeft = ball.position.x;\r\n  let ballRight = ballLeft + ball.size;\r\n\r\n  let gameObjectTop = gameObject.position.y;\r\n  let gameObjectBottom = gameObjectTop + gameObject.size.h;\r\n  let gameObjectLeft = gameObject.position.x;\r\n  let gameObjectRight = gameObjectLeft + gameObject.size.w;\r\n\r\n  const condition1 = ballBottom >= gameObjectTop && ballTop <= gameObjectBottom;\r\n\r\n  const condition2 = ballRight >= gameObjectLeft && ballLeft <= gameObjectRight;\r\n  const condition = condition1 && condition2;\r\n  if (condition) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import detectCollision from \"./collisionDetection\";\r\n\r\nexport default class Ball {\r\n  constructor(game) {\r\n    this.image = document.getElementById(\"imgBall\");\r\n    this.position = { x: 100, y: 250 };\r\n    this.initialSpeed = { x: 2, y: -2 };\r\n    this.speed = { x: 2, y: -2 };\r\n    this.size = 16;\r\n    this.game = game;\r\n\r\n    this.gameWidth = game.gameWidth;\r\n    this.gameHeight = game.gameHeight;\r\n    this.reset();\r\n  }\r\n\r\n  reset() {\r\n    this.position = { x: 100, y: 250 };\r\n    this.speed = this.initialSpeed;\r\n    this.game.paddle.position = {\r\n      x: this.game.gameWidth / 2 - this.game.paddle.width / 2,\r\n      y: this.game.gameHeight - this.game.paddle.height - 10\r\n    };\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.drawImage(\r\n      this.image,\r\n      this.position.x,\r\n      this.position.y,\r\n      this.size,\r\n      this.size\r\n    );\r\n  }\r\n\r\n  update(deltaTime) {\r\n    this.position.x += this.speed.x * (deltaTime / 10);\r\n    this.position.y += this.speed.y * (deltaTime / 10);\r\n\r\n    // wall on left or right\r\n    if (this.position.x > this.gameWidth - this.size || this.position.x < 0) {\r\n      this.speed.x = -this.speed.x;\r\n    }\r\n\r\n    // wall on top\r\n    if (this.position.y < 0) {\r\n      this.speed.y = -this.speed.y;\r\n    }\r\n\r\n    // wall on bottom\r\n    if (this.position.y > this.gameHeight - this.size) {\r\n      this.game.lives--;\r\n      this.reset();\r\n    }\r\n\r\n    // collision with paddle\r\n    if (detectCollision(this, this.game.paddle)) {\r\n      this.speed.y = -this.speed.y;\r\n      this.position.y = this.game.paddle.position.y - this.size;\r\n    }\r\n  }\r\n}\r\n","export default class Heart {\r\n  constructor(game) {\r\n    this.image = document.getElementById(\"imgHeart\");\r\n    this.game = game;\r\n    this.gameWidth = game.gameWidth;\r\n    this.gameHeight = game.gameHeight;\r\n    this.size = 15;\r\n    this.initial = {\r\n      x: this.gameWidth - 30,\r\n      y: 30\r\n    };\r\n  }\r\n\r\n  update(deltaTime) {\r\n    return true;\r\n  }\r\n\r\n  draw(ctx) {\r\n    const lives = this.game.lives;\r\n    for (var i = 0; i < lives; i++) {\r\n      let x = this.initial.x - (i * this.size + 4);\r\n      ctx.drawImage(this.image, x, this.initial.y, this.size, this.size);\r\n    }\r\n\r\n    const level = \"Level: \" + (Number(this.game.level) + 1);\r\n    ctx.font = \"14px Roboto\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.fillStyle = \"#fff\";\r\n    ctx.fillText(level, 30, 30);\r\n  }\r\n}\r\n","import detectCollision from \"./collisionDetection\";\r\n\r\nexport default class Brick {\r\n  constructor(game, position) {\r\n    this.image = document.getElementById(\"imgBrick\");\r\n\r\n    this.game = game;\r\n    this.position = position;\r\n    this.size = { w: this.game.gameWidth / 10, h: this.game.gameWidth / 25 };\r\n    this.markedForDeletion = false;\r\n  }\r\n\r\n  update() {\r\n    if (detectCollision(this.game.ball, this)) {\r\n      this.game.ball.speed.y = -this.game.ball.speed.y;\r\n      this.markedForDeletion = true;\r\n    }\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.drawImage(\r\n      this.image,\r\n      this.position.x,\r\n      this.position.y,\r\n      this.size.w,\r\n      this.size.h\r\n    );\r\n  }\r\n}\r\n","import Brick from \"./brick\";\r\n\r\nfunction buildLevel(game, level) {\r\n  const pracBrick = new Brick(game, { x: 0, y: 0 });\r\n  const { w, h } = pracBrick.size;\r\n  let bricks = [];\r\n  level.forEach((row, rowIndex) => {\r\n    row.forEach((brick, brickIndex) => {\r\n      if (brick === 1) {\r\n        let position = {\r\n          x: w * brickIndex,\r\n          y: h * rowIndex + 75\r\n        };\r\n\r\n        bricks.push(new Brick(game, position));\r\n      }\r\n    });\r\n  });\r\n\r\n  return bricks;\r\n}\r\n\r\nconst level1 = [\r\n  [0, 1, 1, 0, 1, 1, 0, 1, 0, 1],\r\n  [1, 1, 1, 0, 1, 0, 1, 1, 1, 1],\r\n  [1, 0, 1, 1, 0, 1, 1, 1, 1, 0],\r\n  [1, 1, 1, 1, 1, 0, 1, 1, 1, 0]\r\n];\r\n\r\nconst level2 = [\r\n  [0, 1, 1, 1, 1, 1, 1, 0, 1, 0],\r\n  [1, 1, 1, 1, 0, 1, 1, 1, 1, 0],\r\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  [0, 1, 1, 1, 0, 0, 1, 0, 0, 0]\r\n];\r\n\r\nconst level3 = [\r\n  [0, 0, 1, 0, 0, 1, 0, 1, 1, 0],\r\n  [1, 1, 1, 1, 0, 1, 0, 1, 1, 1],\r\n  [1, 1, 1, 1, 1, 0, 1, 1, 1, 0],\r\n  [0, 0, 0, 0, 0, 0, 1, 1, 0, 0],\r\n  [1, 1, 1, 1, 0, 1, 0, 0, 1, 0]\r\n];\r\n\r\nconst levels = [level1, level2, level3];\r\n\r\nexport { levels, buildLevel };\r\n","import Paddle from \"./paddle\";\r\nimport InputHandler from \"./input\";\r\nimport Ball from \"./ball\";\r\nimport Heart from \"./heart\";\r\nimport { buildLevel, levels } from \"./levels\";\r\n\r\nconst GAME_STATE = {\r\n  PAUSED: 0,\r\n  RUNNING: 1,\r\n  MENU: 2,\r\n  GAME_OVER: 3,\r\n  NEW_LEVEL: 4,\r\n  VICTORY: 5\r\n};\r\n\r\nexport default class Game {\r\n  constructor(game) {\r\n    this.gameWidth = game.gameWidth;\r\n    this.gameHeight = game.gameHeight;\r\n    this.gameState = GAME_STATE.MENU;\r\n\r\n    this.gameObjects = [];\r\n    this.bricks = [];\r\n\r\n    this.paddle = new Paddle(this);\r\n    this.ball = new Ball(this);\r\n    this.heart = new Heart(this);\r\n    this.lives = 3;\r\n    this.levels = levels;\r\n    this.level = 0;\r\n    new InputHandler(this.paddle, this);\r\n  }\r\n\r\n  start() {\r\n    if (\r\n      this.gameState === GAME_STATE.MENU ||\r\n      this.gameState === GAME_STATE.NEW_LEVEL\r\n    ) {\r\n      if (this.levels[this.level]) {\r\n        this.bricks = buildLevel(this, this.levels[this.level]);\r\n        this.gameObjects = [this.paddle, this.ball];\r\n        this.ball.reset();\r\n        this.gameState = GAME_STATE.RUNNING;\r\n      } else {\r\n        this.gameState = GAME_STATE.VICTORY;\r\n      }\r\n    }\r\n  }\r\n\r\n  restart() {\r\n    this.gameObjects = [];\r\n    this.bricks = [];\r\n    this.lives = 3;\r\n    this.level = 0;\r\n    this.bricks = buildLevel(this, this.levels[this.level]);\r\n    this.gameObjects = [this.paddle, this.ball];\r\n    this.ball.reset();\r\n    this.gameState = GAME_STATE.RUNNING;\r\n  }\r\n\r\n  togglePause() {\r\n    if (this.gameState === GAME_STATE.RUNNING) {\r\n      this.gameState = GAME_STATE.PAUSED;\r\n    } else {\r\n      this.gameState = GAME_STATE.RUNNING;\r\n    }\r\n  }\r\n\r\n  update(deltaTime) {\r\n    if (this.lives === 0) {\r\n      this.gameState = GAME_STATE.GAME_OVER;\r\n    }\r\n\r\n    if (this.gameState === GAME_STATE.RUNNING && this.bricks.length === 0) {\r\n      this.level++;\r\n      this.gameState = GAME_STATE.NEW_LEVEL;\r\n      this.start();\r\n    }\r\n\r\n    if (this.gameState === GAME_STATE.RUNNING) {\r\n      [...this.gameObjects, ...this.bricks].forEach((elem) =>\r\n        elem.update(deltaTime)\r\n      );\r\n      this.isInLoop = true;\r\n\r\n      this.bricks = this.bricks.filter((brick) => !brick.markedForDeletion);\r\n    }\r\n  }\r\n\r\n  draw(ctx) {\r\n    if (\r\n      this.gameState === GAME_STATE.RUNNING ||\r\n      this.gameState === GAME_STATE.PAUSED\r\n    ) {\r\n      [...this.gameObjects, ...this.bricks, this.heart].forEach((elem) =>\r\n        elem.draw(ctx)\r\n      );\r\n    }\r\n\r\n    if (this.gameState === GAME_STATE.PAUSED) {\r\n      ctx.rect(0, 0, this.gameWidth, this.gameHeight);\r\n      ctx.fillStyle = \"rgba(225, 225, 225, 0.5)\";\r\n      ctx.fill();\r\n\r\n      ctx.font = \"30px Roboto\";\r\n      ctx.fillStyle = \"#0ff\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillText(\"PAUSED\", this.gameWidth / 2, this.gameHeight / 2);\r\n    }\r\n    if (this.gameState === GAME_STATE.MENU) {\r\n      ctx.rect(10, 10, this.gameWidth - 20, this.gameHeight - 20);\r\n      ctx.fillStyle = \"#fff\";\r\n      ctx.fill();\r\n\r\n      ctx.font = \"30px Roboto\";\r\n      ctx.fillStyle = \"#0ff\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillText(\r\n        \"Press SPACEBAR to start.\",\r\n        this.gameWidth / 2,\r\n        this.gameHeight / 2\r\n      );\r\n    }\r\n    if (this.gameState === GAME_STATE.GAME_OVER) {\r\n      ctx.rect(10, 10, this.gameWidth - 20, this.gameHeight - 20);\r\n      ctx.fillStyle = \"#f00\";\r\n      ctx.fill();\r\n\r\n      ctx.font = \"30px Roboto\";\r\n      ctx.fillStyle = \"#0ff\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillText(\r\n        \"GAME OVER. Press Ctrl + Alt + R to restart\",\r\n        this.gameWidth / 2,\r\n        this.gameHeight / 2\r\n      );\r\n    }\r\n    if (this.gameState === GAME_STATE.VICTORY) {\r\n      ctx.rect(10, 10, this.gameWidth - 20, this.gameHeight - 20);\r\n      ctx.fillStyle = \"#0ff\";\r\n      ctx.fill();\r\n\r\n      ctx.font = \"30px Roboto\";\r\n      ctx.fillStyle = \"#fff\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillText(\r\n        \"VICTORY! Press Ctrl + Alt + R to restart\",\r\n        this.gameWidth / 2,\r\n        this.gameHeight / 2\r\n      );\r\n    }\r\n  }\r\n}\r\n","import Game from \"./game\";\n\nconst canvas = document.getElementById(\"gameScreen\");\nconst ctx = canvas.getContext(\"2d\");\n\nconst GAME_WIDTH = canvas.clientWidth;\nconst GAME_HEIGHT = canvas.clientHeight;\n\n// Assets and Functions\n\nlet game = new Game({ gameWidth: GAME_WIDTH, gameHeight: GAME_HEIGHT });\n\n// State / Variables\n\nlet lastTime = 0;\n\nfunction gameLoop(timeStamp) {\n  let deltaTime = timeStamp - lastTime;\n  lastTime = timeStamp;\n\n  ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\n  game.update(deltaTime);\n  game.draw(ctx);\n\n  requestAnimationFrame(gameLoop);\n}\n\nrequestAnimationFrame(gameLoop);\n"]}